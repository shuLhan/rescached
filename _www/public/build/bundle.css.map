{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Environment.svelte",
    "../../HostsBlock.svelte",
    "../../HostsDir.svelte",
    "../../InputAddress.svelte",
    "../../InputNumber.svelte",
    "../../LabelHint.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte';\n\n\timport { apiEnvironment, environment, nanoSeconds } from './environment.js';\n\timport Environment from './Environment.svelte';\n\timport HostsBlock from './HostsBlock.svelte';\n\timport HostsDir from './HostsDir.svelte';\n\n\tconst stateHostsBlock = \"hosts_block\"\n\tconst stateHostsDir = \"hosts_d\"\n\n\texport let name;\n\tlet state;\n\tlet env = {\n\t\tNameServers: [],\n\t\tHostsBlocks: [],\n\t\tHostsFiles: [],\n\t};\n\n\tonMount(async () => {\n\t\tconst res = await fetch(apiEnvironment);\n\t\tlet got = await res.json();\n\t\tgot.PruneDelay = got.PruneDelay / nanoSeconds;\n\t\tgot.PruneThreshold = got.PruneThreshold / nanoSeconds;\n\t\tenv = Object.assign(env, got)\n\t\tfor (let x = 0; x < env.HostsFiles.length; x++) {\n\t\t\tenv.HostsFiles[x].hosts = [];\n\t\t}\n\t\tenvironment.set(env)\n\t});\n</script>\n\n<style>\n\tdiv.main {\n\t\tpadding: 0px 1em;\n\t\tmax-width: 800px;\n\t\tmargin: 0px auto;\n\t}\n\tnav.menu {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: normal;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (max-width: 640px) {\n\t\tdiv.main {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n\n<div class=\"main\">\n\t<nav class=\"menu\">\n\t\t<a href=\"#\" on:click={()=>state=\"\"}>\n\t\t\t{name}\n\t\t</a>\n\t\t/\n\t\t<a href=\"#{stateHostsBlock}\" on:click={()=>state=stateHostsBlock}>\n\t\t\tHosts blocks\n\t\t</a>\n\t\t/\n\t\t<a href=\"#{stateHostsDir}\" on:click={()=>state=stateHostsDir}>\n\t\t\thosts.d\n\t\t</a>\n\t</nav>\n\n\t{#if state === stateHostsBlock}\n\t\t<HostsBlock/>\n\t{:else if state === stateHostsDir}\n\t\t<HostsDir/>\n\t{:else}\n\t\t<Environment/>\n\t{/if}\n</div>\n",
    "<script>\n\timport { onDestroy } from 'svelte';\n\n\timport { apiEnvironment, environment, nanoSeconds } from './environment.js';\n\timport LabelHint from \"./LabelHint.svelte\";\n\timport InputNumber from \"./InputNumber.svelte\";\n\timport InputAddress from \"./InputAddress.svelte\";\n\n\tlet env = {\n\t\tNameServers: [],\n\t\tHostsBlocks: [],\n\t};\n\n\tconst envUnsubscribe = environment.subscribe(value => {\n\t\tenv = value;\n\t});\n\n\tonDestroy(envUnsubscribe);\n\n\tfunction addNameServer() {\n\t\tenv.NameServers = [...env.NameServers, '']\n\t}\n\n\tfunction deleteNameServer(ns) {\n\t\tfor (let x = 0; x < env.NameServers.length; x++) {\n\t\t\tif (env.NameServers[x] === ns) {\n\t\t\t\tenv.NameServers.splice(x, 1);\n\t\t\t\tenv.NameServers = env.NameServers;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function updateEnvironment() {\n\t\tlet got = {};\n\n\t\tObject.assign(got, env)\n\t\tenvironment.set(env)\n\n\t\tgot.PruneDelay = got.PruneDelay * nanoSeconds;\n\t\tgot.PruneThreshold = got.PruneThreshold * nanoSeconds;\n\n\t\tconst res = await fetch(apiEnvironment, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(got),\n\t\t});\n\n\t\tconst resJSON = await res.json()\n\n\t\tconsole.log(resJSON);\n\t}\n</script>\n\n<style>\n\tinput {\n\t\twidth: 100%;\n\t}\n\t.input-deletable {\n\t\twidth: 100%;\n\t}\n\t.input-deletable > input {\n\t\tfloat: left;\n\t\tmax-width: calc(100% - 80px);\n\t}\n\t.input-deletable > button {\n\t\tfloat: left;\n\t\twidth: 80px;\n\t}\n\t.input-suffix input {\n\t\twidth: 70%;\n\t}\n\t.input-suffix input[type=\"checkbox\"] {\n\t\twidth: auto;\n\t}\n\t.input-suffix .suffix {\n\t\twidth: 30%;\n\t}\n</style>\n\n<div class=\"environment\">\n<h2>\n\t/ Environment\n</h2>\n\n<p>\nThis page allow you to change the rescached environment.\nUpon save, the rescached service will be restarted.\n</p>\n\n<h3>rescached</h3>\n<div>\n\t<LabelHint\n\t\ttarget=\"FileResolvConf\"\n\t\ttitle=\"System resolv.conf\"\n\t\tinfo=\"A path to dynamically generated resolv.conf(5) by\nresolvconf(8).  If set, the nameserver values in referenced file will\nreplace 'parent' value and 'parent' will become a fallback in\ncase the referenced file being deleted or can not be parsed.\"\n\t></LabelHint>\n\t<input name=\"FileResolvConf\" bind:value={env.FileResolvConf}>\n\n\t<LabelHint\n\t\ttarget=\"Debug\"\n\t\ttitle=\"Debug level\"\n\t\tinfo=\"This option only used for debugging program or if user\nwant to monitor what kind of traffic goes in and out of rescached.\"\n\t></LabelHint>\n\t<InputNumber min=0 max=3 bind:val={env.Debug} unit=\"\">\n\t</InputNumber>\n</div>\n\n<h3>DNS server</h3>\n<div>\n\t<LabelHint\n\t\ttarget=\"NameServers\"\n\t\ttitle=\"Name servers\"\n\t\tinfo=\"List of parent DNS servers.\"\n\t></LabelHint>\n\t{#each env.NameServers as ns}\n\t<div class=\"input-deletable\">\n\t\t<input bind:value={ns}>\n\t\t<button on:click={deleteNameServer(ns)}>\n\t\t\tDelete\n\t\t</button>\n\t</div>\n\t{/each}\n\t<button on:click={addNameServer}>\n\t\tAdd\n\t</button>\n\n\t<LabelHint\n\t\ttarget=\"ListenAddress\"\n\t\ttitle=\"Listen address\"\n\t\tinfo=\"Address in local network where rescached will\nlistening for query from client through UDP and TCP.\n<br/>\nIf you want rescached to serve a query from another host in your local\nnetwork, change this value to <tt>0.0.0.0:53</tt>.\"\n\t></LabelHint>\n\t<InputAddress\n\t\tbind:value={env.ListenAddress}\n\t></InputAddress>\n\n\t<LabelHint\n\t\ttarget=\"HTTPPort\"\n\t\ttitle=\"HTTP listen port\"\n\t\tinfo=\"Port to serve DNS over HTTP\"\n\t></LabelHint>\n\t<InputNumber min=0 max=65535 bind:val={env.HTTPPort} unit=\"\">\n\t</InputNumber>\n\n\t<LabelHint\n\t\ttarget=\"TLSPort\"\n\t\ttitle=\"TLS listen port\"\n\t\tinfo=\"Port to listen for DNS over TLS\"\n\t></LabelHint>\n\t<InputNumber min=0 max=65535 bind:val={env.TLSPort} unit=\"\">\n\t</InputNumber>\n\n\t<LabelHint\n\t\ttarget=\"TLSCertFile\"\n\t\ttitle=\"TLS certificate\"\n\t\tinfo=\"Path to certificate file to serve DNS over TLS and\nHTTPS\"></LabelHint>\n\t<input name=\"TLSCertFile\" bind:value={env.TLSCertFile}>\n\n\t<LabelHint\n\t\ttarget=\"TLSPrivateKey\"\n\t\ttitle=\"TLS private key\"\n\t\tinfo=\"Path to certificate private key file to serve DNS over TLS and\nHTTPS.\"\n\t></LabelHint>\n\t<input name=\"TLSPrivateKey\" bind:value={env.TLSPrivateKey}>\n\n\t<LabelHint\n\t\ttarget=\"TLSAllowInsecure\"\n\t\ttitle=\"TLS allow insecure\"\n\t\tinfo=\"If its true, allow serving DoH and DoT with self signed\ncertificate.\"\n\t></LabelHint>\n\t<div class=\"input-suffix\">\n\t\t<input\n\t\t\tname=\"TLSAllowInsecure\"\n\t\t\ttype=checkbox\n\t\t\tbind:checked={env.TLSAllowInsecure}\n\t\t>\n\t\t<span class=\"suffix\">\n\t\t\tYes\n\t\t</span>\n\t</div>\n\n\t<LabelHint\n\t\ttarget=\"DoHBehindProxy\"\n\t\ttitle=\"DoH behind proxy\"\n\t\tinfo=\"If its true, serve DNS over HTTP only, even if\ncertificate files is defined.\nThis allow serving DNS request forwarded by another proxy server.\"\n\t></LabelHint>\n\t<div class=\"input-suffix\">\n\t\t<input\n\t\t\tname=\"DoHBehindProxy\"\n\t\t\ttype=checkbox\n\t\t\tbind:checked={env.DoHBehindProxy}\n\t\t>\n\t\t<span class=\"suffix\">\n\t\t\tYes\n\t\t</span>\n\t</div>\n\n\t<LabelHint\n\t\ttarget=\"PruneDelay\"\n\t\ttitle=\"Prune delay\"\n\t\tinfo=\"Delay for pruning caches.\nEvery N seconds, rescached will traverse all caches and remove response that\nhas not been accessed less than cache.prune_threshold.\nIts value must be equal or greater than 1 hour (3600 seconds).\n\"\n\t></LabelHint>\n\t<InputNumber\n\t\tmin=3600\n\t\tmax=36000\n\t\tbind:val={env.PruneDelay}\n\t\tunit=\"Seconds\"\n\t></InputNumber>\n\n\t<LabelHint\n\t\ttarget=\"PruneThreshold\"\n\t\ttitle=\"Prune threshold\"\n\t\tinfo=\"The duration when the cache will be considered expired.\nIts value must be negative and greater or equal than -1 hour (-3600 seconds).\"\n\t></LabelHint>\n\t<InputNumber\n\t\tmin=-36000\n\t\tmax=-3600\n\t\tbind:val={env.PruneThreshold}\n\t\tunit=\"Seconds\"\n\t></InputNumber>\n</div>\n\n<div>\n\t<button on:click={updateEnvironment}>\n\t\tSave\n\t</button>\n</div>\n</div>\n",
    "<script>\n\timport { onDestroy } from 'svelte';\n\n\timport { apiEnvironment, environment, nanoSeconds } from './environment.js';\n\n\tconst apiHostsBlock = \"/api/hosts_block\"\n\tlet env = {\n\t\tNameServers: [],\n\t\tHostsBlocks: [],\n\t\tHostsFiles: [],\n\t};\n\n\tconst envUnsubscribe = environment.subscribe(value => {\n\t\tenv = value;\n\t});\n\tonDestroy(envUnsubscribe);\n\n\tasync function updateHostsBlocks() {\n\t\tconst res = await fetch(apiHostsBlock, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(env.HostsBlocks),\n\t\t});\n\n\t\tconst resJSON = await res.json()\n\t}\n</script>\n\n<style>\n\t.block_source {\n\t\twidth: calc(100% - 2em);\n\t\toverflow: auto;\n\t\tfont-size: 12px;\n\t}\n\t.block_source input:disabled {\n\t\tcolor: black;\n\t}\n\t.item span {\n\t\tdisplay: inline-block;\n\t\tmargin-right: 1em;\n\t}\n\t.item.header {\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 1em;\n\t\tborder-bottom: 1px solid silver;\n\t}\n\t.item > span:nth-child(1) {\n\t\twidth: 4em;\n\t}\n\t.item > span:nth-child(2) {\n\t\twidth: 15em;\n\t}\n\t.item > span:nth-child(3) {\n\t\twidth: 23em;\n\t}\n\t.item > span:nth-child(3) input {\n\t\twidth: 100%;\n\t}\n\t.item > span:nth-child(4) {\n\t\twidth: 16em;\n\t}\n</style>\n\n<div class=\"hosts-block\">\n\t<h2>\n\t/ Hosts block\n\t</h2>\n\n\t<p>\n\tConfigure the source of blocked hosts file.\n\t</p>\n\n\t<div class=\"block_source\">\n\t\t<div class=\"item header\">\n\t\t\t<span> Enabled </span>\n\t\t\t<span> Name </span>\n\t\t\t<span> URL </span>\n\t\t\t<span> Last updated </span>\n\t\t</div>\n\t\t{#each env.HostsBlocks as hostsBlock}\n\t\t<div class=\"item\">\n\t\t\t<span>\n\t\t\t\t<input\n\t\t\t\t\ttype=checkbox\n\t\t\t\t\tbind:checked={hostsBlock.IsEnabled}\n\t\t\t\t>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t{hostsBlock.Name}\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t<input\n\t\t\t\t\tbind:value={hostsBlock.URL}\n\t\t\t\t\tdisabled\n\t\t\t\t>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t{hostsBlock.LastUpdated}\n\t\t\t</span>\n\t\t</div>\n\t\t{/each}\n\t</div>\n\n\t<div>\n\t\t<button on:click={updateHostsBlocks}>\n\t\t\tSave\n\t\t</button>\n\t</div>\n</div>\n",
    "<script>\n\timport { onDestroy } from 'svelte';\n\timport { apiEnvironment, environment, nanoSeconds } from './environment.js';\n\n\tconst apiHostsDir = \"/api/hosts.d\"\n\tlet env = {\n\t\tHostsFiles: [],\n\t};\n\tlet hostsFile = {\n\t\tName: \"\",\n\t\thosts: [],\n\t};\n\tlet newHostsFile = \"\";\n\n\tconst envUnsubscribe = environment.subscribe(value => {\n\t\tenv = value;\n\t});\n\tonDestroy(envUnsubscribe);\n\n\tasync function getHostsFile(hf) {\n\t\tif (hf.hosts.length > 0) {\n\t\t\thostsFile = hf;\n\t\t\treturn;\n\t\t}\n\t\tconst res = await fetch(apiHostsDir +\"/\"+ hf.Name);\n\t\thf.hosts = await res.json();\n\t\thostsFile = hf;\n\t}\n\n\tasync function createHostsFile() {\n\t\tif (newHostsFile === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst res = await fetch(apiHostsDir+ \"/\"+ newHostsFile, {\n\t\t\tmethod: \"PUT\",\n\t\t})\n\n\t\tif (res.status >= 400) {\n\t\t\tconsole.log(\"createHostsFile: \", res.status, res.statusText);\n\t\t\treturn;\n\t\t}\n\n\t\tconst hf = {\n\t\t\tName: newHostsFile,\n\t\t\tPath: newHostsFile,\n\t\t\thosts: [],\n\t\t}\n\t\tenv.HostsFiles.push(hf);\n\t\tenv.HostsFiles = env.HostsFiles;\n\t}\n\n\tasync function updateHostsFile() {\n\t\tconst res = await fetch(apiHostsDir+\"/\"+ hostsFile.Name, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(hostsFile.hosts),\n\t\t})\n\n\t\tif (res.status >= 400) {\n\t\t\tconsole.log(\"updateHostsFile: \", res.status, res.statusText);\n\t\t\treturn;\n\t\t}\n\n\t\thostsFile.hosts = await res.json()\n\t}\n\n\tfunction addHost() {\n\t\tlet newHost = {\n\t\t\tName: \"\",\n\t\t\tValue: \"\",\n\t\t}\n\t\thostsFile.hosts.unshift(newHost);\n\t\thostsFile.hosts = hostsFile.hosts;\n\t}\n\n\tfunction deleteHost(idx) {\n\t\tconsole.log('deleteHost at ', idx);\n\t\thostsFile.hosts.splice(idx, 1);\n\t\thostsFile.hosts = hostsFile.hosts;\n\t}\n\n\tasync function deleteHostsFile(hfile) {\n\t\tconst res = await fetch(apiHostsDir+\"/\"+hfile.Name, {\n\t\t\tmethod: \"DELETE\",\n\t\t});\n\t\tif (res.status >= 400) {\n\t\t\tconsole.log(\"deleteHostsFile: \", res.status, res.statusText);\n\t\t\treturn;\n\t\t}\n\t\tfor (let x = 0; x < env.HostsFiles.length; x++) {\n\t\t\tif (env.HostsFiles[x].Name == hfile.Name) {\n\t\t\t\thostsFile = {Name: \"\", Path:\"\", hosts: []};\n\t\t\t\tenv.HostsFiles.splice(x, 1);\n\t\t\t\tenv.HostsFiles = env.HostsFiles;\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.nav-left {\n\t\tpadding: 0px;\n\t\twidth: 300px;\n\t\tfloat: left;\n\t}\n\t.nav-left .item {\n\t\tmargin: 4px 0px;\n\t}\n\t.content {\n\t\tfloat: left;\n\t}\n\t.host {\n\t\tfont-family: monospace;\n\t\twidth: 100%;\n\t}\n\tinput.host_name {\n\t\tmin-width: 240px;\n\t\twidth: calc(100% - 180px);\n\t}\n\tinput.host_value {\n\t\twidth: 140px;\n\t}\n</style>\n\n<div class=\"hosts_d\">\n\t<h2>\n\t\t/ hosts.d\n\t</h2>\n\n\t<div class=\"nav-left\">\n\t\t{#each env.HostsFiles as hf}\n\t\t<div class=\"item\">\n\t\t\t<a href=\"#\" on:click={getHostsFile(hf)}>\n\t\t\t\t{hf.Name}\n\t\t\t</a>\n\t\t</div>\n\t\t{/each}\n\t\t<br/>\n\t\t<label>\n\t\t\t<span>New hosts file:</span>\n\t\t\t<br/>\n\t\t\t<input bind:value={newHostsFile}>\n\t\t</label>\n\t\t<button on:click={createHostsFile}>\n\t\t\tCreate\n\t\t</button>\n\t</div>\n\n\t<div class=\"content\">\n\t\t{#if hostsFile.Name === \"\"}\n\t\t<p>\n\t\t\tSelect one of the hosts file to manage.\n\t\t</p>\n\t\t{:else}\n\t\t<p>\n\t\t\t{hostsFile.Name} ({hostsFile.hosts.length} records)\n\t\t\t<button on:click={deleteHostsFile(hostsFile)}>\n\t\t\t\tDelete\n\t\t\t</button>\n\t\t</p>\n\t\t<div>\n\t\t\t<button on:click={addHost}>\n\t\t\t\tAdd\n\t\t\t</button>\n\t\t</div>\n\n\t\t{#each hostsFile.hosts as host, idx (idx)}\n\t\t<div class=\"host\">\n\t\t\t<input\n\t\t\t\tclass=\"host_name\"\n\t\t\t\tplaceholder=\"Domain name\"\n\t\t\t\tbind:value={host.Name}\n\t\t\t>\n\t\t\t<input\n\t\t\t\tclass=\"host_value\"\n\t\t\t\tplaceholder=\"IP address\"\n\t\t\t\tbind:value={host.Value}\n\t\t\t>\n\t\t\t<button on:click={deleteHost(idx)}>\n\t\t\t\tX\n\t\t\t</button>\n\t\t</div>\n\t\t{/each}\n\n\t\t<button on:click={updateHostsFile}>\n\t\t\tSave\n\t\t</button>\n\t\t{/if}\n\t</div>\n</div>\n",
    "<script>\n\texport let value = \"\";\n\tlet isInvalid = false;\n\tlet error = \"\";\n\n\tfunction onBlur() {\n\t\tconst ipport = value.split(\":\");\n\t\tif (ipport.length !== 2) {\n\t\t\tisInvalid = true;\n\t\t\treturn;\n\t\t}\n\t\tconst ip = ipport[0];\n\t\tif (ip.length > 0) {\n\t\t\tconst nums = ip.split(\".\");\n\t\t\tif (nums.length != 4) {\n\t\t\t\tisInvalid = true;\n\t\t\t\terror = \"invalid IP address\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst port = parseInt(ipport[1]);\n\t\tif (isNaN(port) || port <= 0 || port >= 65535) {\n\t\t\tisInvalid = true;\n\t\t\terror = \"invalid port number\";\n\t\t\treturn;\n\t\t}\n\t\tisInvalid = false;\n\t\tvalue = ip +\":\"+ port;\n\t}\n</script>\n\n<style>\n\t.invalid {\n\t\tcolor: red;\n\t}\n</style>\n\n<div class=\"input-address\">\n\t<input\n\t\ttype=\"text\"\n\t\tbind:value={value}\n\t\ton:blur={onBlur}\n\t\tclass:invalid={isInvalid}\n\t>\n\t{#if isInvalid}\n\t<span class=\"invalid\">{error}</span>\n\t{/if}\n</div>\n",
    "<script>\n\texport let min;\n\texport let max;\n\texport let val = 0;\n\texport let unit;\n\n\tfunction onChange() {\n\t\tvalue = +value\n\t\tif (isNaN(value)) {\n\t\t\tvalue = max\n\t\t} else if (value < min) {\n\t\t\tvalue = min\n\t\t} else if (value > max) {\n\t\t\tvalue = max\n\t\t}\n\t}\n</script>\n\n<style>\n\t.input-number input {\n\t\twidth: 70%;\n\t}\n\t.input-number .suffix {\n\t\twidth: 30%;\n\t}\n</style>\n\n<div class=\"input-number\">\n\t<input type=\"number\" on:change={onChange} bind:value={val}>\n\t{#if unit !== ''}\n\t\t<span class=\"suffix\">\n\t\t\t{unit}\n\t\t</span>\n\t{/if}\n</div>\n",
    "<script>\n\texport let target;\n\texport let title;\n\texport let info;\n\tlet showInfo = false;\n</script>\n\n<style>\n\tlabel.label-hint {\n\t\tmargin-top: 1em;\n\t\tmax-width: 100%;\n\t}\n\t.label-hint-title {\n\t\tmargin-bottom: 4px;\n\t}\n\t.label-hint-toggle {\n\t\tborder-radius: 50%;\n\t\tborder: 1px solid grey;\n\t\tcursor: pointer;\n\t\tdisplay: inline-block;\n\t\tfont-size: 12px;\n\t\theight: 14px;\n\t\tline-height: 14px;\n\t\tpadding: 2px;\n\t\ttext-align: center;\n\t\twidth: 14px;\n\t}\n\t.label-hint-info {\n\t\tbackground-color: #eee;\n\t\tborder-radius: 8px;\n\t\tmargin: 8px 0px;\n\t\tpadding: 1em;\n\t}\n</style>\n\n<label for={target} class=\"label-hint\"></label>\n<div class=\"label-hint-title\">\n\t{title}:\n\t<span class=\"label-hint-toggle\" on:click={() => showInfo = !showInfo}>\n\t?\n\t</span>\n</div>\n{#if showInfo}\n<div class=\"label-hint-info\">{@html info}</div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}